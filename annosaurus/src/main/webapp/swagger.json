{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/mbari/annosaurus/1.0.0"
  } ],
  "info" : {
    "description" : "Video Annotation API",
    "version" : "1.0.0-oas3",
    "title" : "annosaurus",
    "contact" : {
      "email" : "brian@mbari.org"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "developers",
    "description" : "Developer ops"
  }, {
    "name" : "Annotation",
    "description" : "Annotation operations"
  }, {
    "name" : "Image",
    "description" : "Image operations"
  }, {
    "name" : "ImagedMoment",
    "description" : "ImagedMoment operations"
  }, {
    "name" : "ImageReference",
    "description" : "ImageReference operations"
  }, {
    "name" : "Association",
    "description" : "Association operations"
  } ],
  "paths" : {
    "/auth" : {
      "post" : {
        "tags" : [ "developers" ],
        "summary" : "Authorize using an API key to retrieve a JWT.",
        "operationId" : "authorize",
        "description" : "Authorize using an API key to retrieve a JWT.",
        "security" : [ {
          "ApiKeyAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an JWT",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Authorization"
                }
              }
            }
          }
        }
      }
    },
    "/associations/{uuid}" : {
      "get" : {
        "tags" : [ "Association" ],
        "summary" : "Retrieve a single association",
        "operationId" : "findAssociation",
        "description" : "Retrieve a single association by its UUID",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "pass the observation UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Association"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "404" : {
            "description" : "Not found (no matching UUID)"
          }
        }
      }
    },
    "/associations/{video_reference_uuid}/{link_name}" : {
      "get" : {
        "tags" : [ "Association" ],
        "summary" : "Find all usages of a specific association in a video",
        "operationId" : "findAssociationsByVideoReferenceAndLinkName",
        "description" : "Fina all usages of a specific association in a video by it's link_name and video_reference_uuid",
        "parameters" : [ {
          "in" : "path",
          "name" : "video_reference_uuid",
          "description" : "The video_reference_uuid of interest",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "path",
          "name" : "link_name",
          "description" : "The link name portion of the associations to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Association"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "404" : {
            "description" : "Not found (no matching UUID)"
          }
        }
      }
    },
    "/annotations/{uuid}" : {
      "get" : {
        "tags" : [ "Annotation" ],
        "summary" : "retrieves a single annotation",
        "operationId" : "findAnnotation",
        "description" : "By passing in the observation UUID, you can retrieve a single annotation\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "pass the observation UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Annotation"
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "404" : {
            "description" : "Not found (no matching UUID)"
          }
        }
      },
      "put" : {
        "tags" : [ "Annotation" ],
        "summary" : "Modify an existing annotation",
        "operationId" : "updateAnnotation",
        "description" : "Modify an existing annotation",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "pass the observation UUID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "responses" : {
          "201" : {
            "description" : "item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Annotation"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "uuid" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "video_reference_uuid" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "concept" : {
                    "type" : "string"
                  },
                  "observer" : {
                    "type" : "string"
                  },
                  "observation_timestamp" : {
                    "type" : "string",
                    "format" : "date"
                  },
                  "timecode" : {
                    "type" : "string"
                  },
                  "elapsed_time_millis" : {
                    "type" : "integer"
                  },
                  "recorded_timestamp" : {
                    "type" : "string",
                    "format" : "date"
                  },
                  "duration_millis" : {
                    "type" : "integer"
                  },
                  "group" : {
                    "type" : "string"
                  },
                  "activity" : {
                    "type" : "string"
                  }
                },
                "required" : [ "video_reference_uuid" ]
              }
            }
          }
        }
      }
    },
    "/annotations" : {
      "post" : {
        "tags" : [ "Annotation" ],
        "summary" : "Creates a single annotation",
        "operationId" : "createAnnotation",
        "description" : "Adds an annotation to the system. Note that at least one video index (timecode, elpased_time_millis, recorded_timestamp) is required.",
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "responses" : {
          "201" : {
            "description" : "item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Annotation"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "video_reference_uuid" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "concept" : {
                    "type" : "string"
                  },
                  "observer" : {
                    "type" : "string"
                  },
                  "observation_timestamp" : {
                    "type" : "string",
                    "format" : "date"
                  },
                  "timecode" : {
                    "type" : "string"
                  },
                  "elapsed_time_millis" : {
                    "type" : "integer"
                  },
                  "recorded_timestamp" : {
                    "type" : "string",
                    "format" : "date"
                  },
                  "duration_millis" : {
                    "type" : "integer"
                  },
                  "group" : {
                    "type" : "string"
                  },
                  "activity" : {
                    "type" : "string"
                  }
                },
                "required" : [ "video_reference_uuid" ]
              }
            }
          }
        }
      }
    },
    "/annotations/bulk" : {
      "post" : {
        "tags" : [ "Annotation" ],
        "summary" : "Create one or more annotations",
        "operationId" : "createAnnotations",
        "description" : "Create one or more annotations",
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Items created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Annotation"
                  }
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Annotation"
                }
              }
            }
          }
        }
      }
    },
    "/annotations/videoreference/{uuid}" : {
      "get" : {
        "tags" : [ "Annotation" ],
        "summary" : "Retrieves all annotations for a given video",
        "operationId" : "findAnnotationsByVideo",
        "description" : "Using a given video-reference uuid, find all annotations for that video",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The video-reference UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "The number of items to return",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "offset",
          "description" : "The number of items to skip before starting to collect the result set",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The video references to be returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Annotation"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      }
    },
    "/annotations/imagereference/{uuid}" : {
      "get" : {
        "tags" : [ "Annotation" ],
        "summary" : "Retrieves annotations by a contained image reference",
        "operationId" : "findAnnotationsByImage",
        "description" : "Using a given image-reference uuid, find all annotations for that image",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The image-reference UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Annotation"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      }
    },
    "/imagereferences/{uuid}" : {
      "get" : {
        "tags" : [ "ImageReference" ],
        "summary" : "Retrieve image information by its UUID",
        "operationId" : "findImageReferenceByUUID",
        "description" : "Retrieve an image reference by its UUID",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The image-reference UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ImageReference"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      },
      "put" : {
        "tags" : [ "Image" ],
        "summary" : "Modify/update image information by its UUID",
        "operationId" : "findImageReferenceByUUID",
        "description" : "Modify/update an image reference by its UUID",
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The image-reference UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImageReference"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "url" : {
                    "type" : "string",
                    "format" : "url"
                  },
                  "width" : {
                    "type" : "integer"
                  },
                  "height" : {
                    "type" : "integer"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "format" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Image" ],
        "summary" : "Delete an image reference by its UUID",
        "operationId" : "findImageReferenceByUUID",
        "description" : "Delete an image reference by its UUID",
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The image-reference UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item deleted"
          },
          "404" : {
            "description" : "Item not found"
          }
        }
      }
    },
    "/images" : {
      "post" : {
        "tags" : [ "Image" ],
        "summary" : "Registers a single image",
        "operationId" : "createImage",
        "description" : "Adds an image to the system. Note that at least one video index (timecode, elpased_time_millis, recorded_timestamp) is required.",
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "responses" : {
          "201" : {
            "description" : "item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Image"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "video_reference_uuid" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "timecode" : {
                    "type" : "string"
                  },
                  "elapsed_time_millis" : {
                    "type" : "integer"
                  },
                  "recorded_timestamp" : {
                    "type" : "string",
                    "format" : "date"
                  },
                  "url" : {
                    "type" : "string",
                    "format" : "url"
                  },
                  "width" : {
                    "type" : "integer"
                  },
                  "height" : {
                    "type" : "integer"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "format" : {
                    "type" : "string"
                  }
                },
                "required" : [ "video_reference_uuid", "url" ]
              }
            }
          }
        }
      }
    },
    "/images/{uuid}" : {
      "get" : {
        "tags" : [ "Image" ],
        "summary" : "Retrieve image information by image reference UUID",
        "operationId" : "findImageByUuid",
        "description" : "Using a given image-reference uuid, find its metadata",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The image-reference UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Image"
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      },
      "put" : {
        "tags" : [ "Image" ],
        "summary" : "Update a single image",
        "operationId" : "updateImage",
        "description" : "Update a single image",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "pass the observation UUID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "responses" : {
          "201" : {
            "description" : "item created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Annotation"
                }
              }
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "uuid" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "video_reference_uuid" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "concept" : {
                    "type" : "string"
                  },
                  "observer" : {
                    "type" : "string"
                  },
                  "observation_timestamp" : {
                    "type" : "string",
                    "format" : "date"
                  },
                  "timecode" : {
                    "type" : "string"
                  },
                  "elapsed_time_millis" : {
                    "type" : "integer"
                  },
                  "recorded_timestamp" : {
                    "type" : "string",
                    "format" : "date"
                  },
                  "duration_millis" : {
                    "type" : "integer"
                  },
                  "group" : {
                    "type" : "string"
                  },
                  "activity" : {
                    "type" : "string"
                  }
                },
                "required" : [ "video_reference_uuid" ]
              }
            }
          }
        }
      }
    },
    "/images/videoreference/{uuid}" : {
      "get" : {
        "tags" : [ "Image" ],
        "summary" : "Return all images for a given video",
        "operationId" : "findImagesByVideoReferenceUuid",
        "description" : "Using a giving video-reference UUID, find all images for that video",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The video-reference UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Image"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      }
    },
    "/images/url/{url}" : {
      "get" : {
        "tags" : [ "Image" ],
        "summary" : "Return image information by image URL",
        "operationId" : "findImageByUrl",
        "description" : "Using the images URL, retrieve the metadata for the image",
        "parameters" : [ {
          "in" : "path",
          "name" : "url",
          "description" : "The URL for the image. It should be url-encoded (i.e. escaped)",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Image"
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      }
    },
    "/imagedmoments" : {
      "get" : {
        "tags" : [ "ImagedMoment" ],
        "summary" : "Retrieve all imaged moments",
        "operationId" : "findAllImagedMoments",
        "description" : "find all imaged moments in the data store",
        "parameters" : [ {
          "in" : "query",
          "name" : "limit",
          "description" : "The number of items to return (default is 1000)",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "offset (default is 0)",
          "description" : "The number of items to skip before starting to collect the result set",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ImagedMoment"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      }
    },
    "/imagedmoments/{uuid}" : {
      "get" : {
        "tags" : [ "ImagedMoment" ],
        "summary" : "Retrieve a single imaged moment by its UUID",
        "operationId" : "findImagedMomentByUuid",
        "description" : "Retreive a single imaged moment by its primary key",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The imaged moment UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "the imaged moment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImagedMoment"
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      }
    },
    "/imagedmoments/modified/{start}/{end}" : {
      "get" : {
        "tags" : [ "ImagedMoment" ],
        "summary" : "Retrieve all imagedmoments that have been modified between dates",
        "operationId" : "findImagedMomentsBetweenDates",
        "description" : "Find all imagedmoments that habe annotations that were created or modified between two dates",
        "parameters" : [ {
          "in" : "path",
          "name" : "start",
          "description" : "The start (inclusive) date. e.g 2018-04-30T01:23:45Z",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "iso8601"
          }
        }, {
          "in" : "path",
          "name" : "end",
          "description" : "The end (inclusive) date. e.g 2018-04-30T01:23:45Z",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "iso8601"
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "The number of items to return (default is 1000)",
          "schema" : {
            "type" : "integer"
          }
        }, {
          "in" : "query",
          "name" : "offset (default is 0)",
          "description" : "The number of items to skip before starting to collect the result set",
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "imagedmoments between two dates",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ImagedMoment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/imagedmoments/modified/count/{start}/{end}" : {
      "get" : {
        "tags" : [ "ImagedMoment" ],
        "summary" : "Retrieve a count of imagedmoments that have been modified between dates",
        "operationId" : "countImagedMomentsBetweenDates",
        "description" : "Count all imagedmoments that habee annotations that were created or modified between two dates",
        "parameters" : [ {
          "in" : "path",
          "name" : "start",
          "description" : "The start (inclusive) date. e.g 2018-04-30T01:23:45Z",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "iso8601"
          }
        }, {
          "in" : "path",
          "name" : "end",
          "description" : "The end (inclusive) date. e.g 2018-04-30T01:23:45Z",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "iso8601"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "imagedmoments between two dates",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ImagedMomentCount"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/observations/{uuid}" : {
      "get" : {
        "tags" : [ "Observation" ],
        "summary" : "Retrieve a single observation by its UUID",
        "operationId" : "findObservationByUuid",
        "description" : "Retreive a single observation by its primary key",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The observation UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "the observation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Observation"
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Observation", "Annotation" ],
        "summary" : "Delete a single observation",
        "operationId" : "deleteObservationByUuid",
        "description" : "Delete a single observation by its UUID",
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The observation UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "true or false",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      },
      "put" : {
        "tags" : [ "Observation" ],
        "summary" : "Modify a single observation",
        "operationId" : "updateObservationByUuid",
        "description" : "Modify/Update a single observation by its primary key",
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The observation UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "imaged_moment_uuid" : {
                    "type" : "string",
                    "format" : "uuid"
                  },
                  "concept" : {
                    "type" : "string"
                  },
                  "observer" : {
                    "type" : "string"
                  },
                  "observation_timestamp" : {
                    "type" : "string",
                    "format" : "date"
                  },
                  "duration_millis" : {
                    "type" : "integer"
                  },
                  "group" : {
                    "type" : "string"
                  },
                  "activity" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "the observation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Observation"
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      }
    },
    "/observations/activities" : {
      "get" : {
        "tags" : [ "Observation" ],
        "summary" : "Retrieve all distinct activities used by any annotations",
        "operationId" : "findObservationActivities",
        "description" : "Retrieve all distinct activities used by any annotations",
        "responses" : {
          "200" : {
            "description" : "activities",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/observations/concept/count/{concept}" : {
      "get" : {
        "tags" : [ "Observation" ],
        "summary" : "Retrieve the number of usages of a concept",
        "operationId" : "countObservationsByConcept",
        "description" : "Retrieve a count of the number of usages of a concept in the entire data store",
        "parameters" : [ {
          "in" : "path",
          "name" : "concept",
          "description" : "The concept name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Count of observations using the given concept",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConceptCount"
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      }
    },
    "/observations/concept/rename" : {
      "put" : {
        "tags" : [ "Observation", "Annotation" ],
        "summary" : "Rename all annotations using a given concept to a different one",
        "operationId" : "renameObservations",
        "description" : "Rename observations",
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "The number of concepts renamed",
            "content" : {
              "application.json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConceptRename"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "old" : {
                    "type" : "string"
                  },
                  "new" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/observations/concepts" : {
      "get" : {
        "tags" : [ "Observation" ],
        "summary" : "Retrieve all concepts used in annotations",
        "operationId" : "findObservationConcepts",
        "description" : "Retrieve all concepts used in annotations",
        "responses" : {
          "200" : {
            "description" : "A list of ditinct concept names used in annotations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      }
    },
    "/observations/concepts/{uuid}" : {
      "get" : {
        "tags" : [ "Observation" ],
        "summary" : "Retrieve all concepts used in annotations for a video",
        "operationId" : "findObservationConceptsByVideoReference",
        "description" : "Retrieve all concepts used in annotations",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The video reference UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of ditinct concept names used in annotations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      }
    },
    "/observations/delete" : {
      "post" : {
        "tags" : [ "Observation", "Annotation" ],
        "summary" : "Delete one or more observations",
        "operationId" : "bulkDeleteObservationsByUuids",
        "description" : "Delete one or more observations using their UUIDs in the post body (as json)",
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "uuid"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successfully deleted observations"
          },
          "400" : {
            "description" : "Failed to delete observations"
          }
        }
      }
    },
    "/observations/groups" : {
      "get" : {
        "tags" : [ "Observation" ],
        "summary" : "Retrieve all distinct groups used by any annotations",
        "operationId" : "findObservationGroups",
        "description" : "Retrieve all distinct groups used by any annotations",
        "responses" : {
          "200" : {
            "description" : "groups",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/observations/association/{uuid}" : {
      "get" : {
        "tags" : [ "Observation", "Association" ],
        "summary" : "Retrive an observation by one of it's associations",
        "operationId" : "findObservatyByAssociationUuid",
        "description" : "Retrieve an observation by one its associations",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The association UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Observation"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      }
    },
    "/observations/videoreference/{uuid}" : {
      "get" : {
        "tags" : [ "Observation" ],
        "summary" : "Return all observations for a given video",
        "operationId" : "findObservationsByVideoReferenceUuid",
        "description" : "Using a giving video-reference UUID, find all observations for that video",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The video-reference UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Observation"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      }
    },
    "/observations/videoreference/count/{uuid}" : {
      "get" : {
        "tags" : [ "Observation" ],
        "summary" : "Return a count of observations for a given video",
        "operationId" : "countObservationsByVideoReferenceUuid",
        "description" : "Using a giving video-reference UUID, find all observations for that video",
        "parameters" : [ {
          "in" : "path",
          "name" : "uuid",
          "description" : "The video-reference UUID",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Count of observations for a given video reference uuid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConceptCount"
                }
              }
            }
          },
          "404" : {
            "description" : "No match was found"
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "BearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      },
      "ApiKeyAuth" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "APIKEY"
      }
    },
    "schemas" : {
      "Authorization" : {
        "description" : "JWT authorization",
        "type" : "object",
        "properties" : {
          "token_type" : {
            "description" : "The type of the token. Normally it will be 'Bearer'",
            "type" : "string"
          },
          "access_token" : {
            "description" : "The JWT token",
            "type" : "string"
          }
        }
      },
      "Annotation" : {
        "description" : "A single annotation",
        "type" : "object",
        "required" : [ "observation_uuid", "concept", "video_reference_uuid" ],
        "properties" : {
          "observation_uuid" : {
            "description" : "uuid for the observation",
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "concept" : {
            "description" : "The name of the object/annotation in the video",
            "type" : "string",
            "example" : "Pandalus platyceros"
          },
          "observer" : {
            "description" : "The person who created or last modified the annotation",
            "type" : "string",
            "example" : "brian"
          },
          "observation_timestamp" : {
            "description" : "The date/time that the annotation was made",
            "type" : "string",
            "example" : "2018-01-29T13:40:01.000Z"
          },
          "video_reference_uuid" : {
            "description" : "The uuid of the video that this annotation belongs to",
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "imaged_moment_uuid" : {
            "description" : "The uuid for the imaged-moment for this video",
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "timecode" : {
            "description" : "Video timecode of the annotation (1 of 3 possible video indices)",
            "type" : "string",
            "example" : "00:02:34:21"
          },
          "elapsed_time_millis" : {
            "description" : "Elapsed time from the start of the video for this annotation (1 of 3 possible video indices)",
            "type" : "integer",
            "example" : 1234578
          },
          "recorded_timestamp" : {
            "description" : "The date that the frame of video containing the annotation was recorded (1 of 3 possible video indices)",
            "type" : "string",
            "example" : "2018-01-29T13:40:01.000Z"
          },
          "duration_millis" : {
            "description" : "The length of time (in milliseconds) that the concept in this annotation was observed",
            "type" : "integer",
            "example" : 1500
          },
          "group" : {
            "description" : "A logical grouping for this annotation. At MBARI we use platforms (ROV, AUV, etc) but this can be anything that is appropriate for your use case",
            "type" : "string",
            "example" : "ROV:detailed"
          },
          "activity" : {
            "description" : "The activity that was occuring while the video was recorded. For example for our ROV's we use descend, ascend, transect. But, like group, use whatever is appropriate for your needs.",
            "type" : "string",
            "example" : "transect"
          },
          "associations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Association"
            }
          },
          "image_references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ImageReference"
            }
          }
        }
      },
      "Association" : {
        "description" : "Additional descriptive information associated with the annotation",
        "type" : "object",
        "required" : [ "link_name" ],
        "properties" : {
          "uuid" : {
            "description" : "The primary key",
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "link_name" : {
            "type" : "string",
            "example" : "eating"
          },
          "to_concept" : {
            "type" : "string",
            "example" : "Grimpoteuthis"
          },
          "link_value" : {
            "type" : "string",
            "example" : "nil"
          },
          "mime_type" : {
            "description" : "The mime-type of the data stored in link_value. Most common are 'plain/text' and 'application/json'",
            "type" : "string",
            "example" : "text/plain"
          },
          "last_upated_time" : {
            "description" : "The time of last modification",
            "type" : "string",
            "example" : "2017-10-25T15:46:38Z"
          }
        }
      },
      "CachedAncillaryDatum" : {
        "description" : "Ancillary data at this moment of video",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "description" : "The primary key",
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "imaged_moment_uuid" : {
            "description" : "UUID to the imagedmoment. This is used when uploading data to the bulk create or update API.",
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "latitude" : {
            "description" : "Latitude of video sample",
            "type" : "number"
          },
          "longitude" : {
            "description" : "Longitude of video sample",
            "type" : "number"
          },
          "depth_meters" : {
            "description" : "Depth of video sample",
            "type" : "number"
          },
          "altitude" : {
            "description" : "Altitude of ocean bottom",
            "type" : "number"
          },
          "crs" : {
            "description" : "Co-ordinate reference system. Indicates how lat and lon ar calculated",
            "type" : "string"
          },
          "salinity" : {
            "description" : "Salinity",
            "type" : "number"
          },
          "temperature_celsius" : {
            "description" : "temperature in celsius",
            "type" : "number"
          },
          "oxygen_ml_l" : {
            "description" : "Oxygen (ml/L)",
            "type" : "number"
          },
          "light_transmission" : {
            "description" : "light transmission through water",
            "type" : "number"
          },
          "x" : {
            "description" : "camera coordinate system (x). Arbitrary!! Users choice",
            "type" : "number"
          },
          "y" : {
            "description" : "camera coordinate system (y). Arbitrary!! Users choice",
            "type" : "number"
          },
          "z" : {
            "description" : "camera coordinate system (z). Arbitrary!! Users choice",
            "type" : "number"
          },
          "pose_position_units" : {
            "description" : "The units of x, y, and z",
            "type" : "string"
          },
          "phi" : {
            "description" : "roll in radians, airplane coordinate system",
            "type" : "number"
          },
          "theta" : {
            "description" : "pitch in radians, airplne coordinate system",
            "type" : "number"
          },
          "psi" : {
            "description" : "tilt in radians, airplane coordinate system",
            "type" : "number"
          },
          "last_upated_time" : {
            "description" : "The time of last modification",
            "type" : "string",
            "example" : "2017-10-25T15:46:38Z"
          }
        }
      },
      "CachedVideoReferenceInfo" : {
        "description" : "Metadata about a video reference",
        "type" : "object",
        "properties" : {
          "uuid" : {
            "description" : "The primary key",
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "video_reference_uuid" : {
            "description" : "The uuid of the video that this image belongs to",
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "platform_name" : {
            "description" : "The name of the camera platform used to collect the video",
            "type" : "string",
            "example" : "Ventana"
          },
          "mission_id" : {
            "description" : "Id for the mission during which this video was collected",
            "type" : "string"
          },
          "mission_contact" : {
            "description" : "The contact name (e.g. chief scientist) for this mission",
            "type" : "string"
          },
          "last_upated_time" : {
            "description" : "The time of last modification",
            "type" : "string",
            "example" : "2017-10-25T15:46:38Z"
          }
        }
      },
      "ConceptCount" : {
        "description" : "The number of concepts found",
        "type" : "object",
        "required" : [ "concept", "count" ],
        "properties" : {
          "concept" : {
            "description" : "The concept that was queried",
            "type" : "string",
            "example" : "Nanomia bijuga"
          },
          "count" : {
            "description" : "The number of usages of this concept found in the datastore",
            "type" : "integer"
          }
        }
      },
      "ConceptRename" : {
        "description" : "The count of rnamed concepts",
        "type" : "object",
        "required" : [ "old_name", "new_name", "count" ],
        "properties" : {
          "old_concept" : {
            "description" : "The name of the concept before it was renamed",
            "type" : "string"
          },
          "new_concept" : {
            "description" : "The name of the concept after it was renamed",
            "type" : "string"
          },
          "number_updated" : {
            "description" : "The number of concepts renamed from 'old' to 'new'",
            "type" : "integer"
          }
        }
      },
      "ImageReference" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "url" : {
            "description" : "The URL of the image",
            "type" : "string",
            "format" : "url",
            "example" : "http://search.mbari.org/ARCHIVE/frameGrabs/Doc%20Ricketts/images/0953/00_00_00_00.png"
          },
          "format" : {
            "description" : "The mime-type of the image",
            "type" : "string",
            "example" : "image/png"
          },
          "width" : {
            "description" : "The image width in pixels",
            "type" : "integer",
            "example" : 1920
          },
          "height" : {
            "description" : "The image height in pixels",
            "type" : "integer",
            "example" : 1080
          },
          "last_upated_time" : {
            "description" : "The time of last modification",
            "type" : "string",
            "example" : "2017-10-25T15:46:38Z"
          }
        }
      },
      "Image" : {
        "type" : "object",
        "properties" : {
          "image_reference_uuid" : {
            "description" : "The primary key",
            "type" : "string",
            "format" : "uuid",
            "example" : "8df9a79e-4b0a-4e00-8bc6-8866de42e752"
          },
          "format" : {
            "description" : "The mime-type",
            "type" : "string",
            "example" : "image/jpg"
          },
          "width" : {
            "description" : "The image width in pixels",
            "type" : "integer",
            "example" : 1920
          },
          "height" : {
            "description" : "The image height in pixels",
            "type" : "integer",
            "example" : 1080
          },
          "url" : {
            "description" : "The image location",
            "type" : "string",
            "format" : "url",
            "example" : "http://search.mbari.org/ARCHIVE/framegrabs/Ventana/images/Ventana%204099/349949-eeb04dbb-d2b1-496e-9980-d3bc8208b897.jpg"
          },
          "description" : {
            "description" : "A free-text description about the image.",
            "type" : "string",
            "example" : "Compressed image"
          },
          "video_reference_uuid" : {
            "description" : "The uuid of the video that this image belongs to",
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "imaged_moment_uuid" : {
            "description" : "The uuid for the imaged-moment for this video",
            "type" : "string",
            "format" : "uuid",
            "example" : "ff90f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "timecode" : {
            "description" : "Video timecode of the annotation (1 of 3 possible video indices)",
            "type" : "string",
            "example" : "00:02:34:21"
          },
          "elapsed_time_millis" : {
            "description" : "Elapsed time from the start of the video for this annotation (1 of 3 possible video indices)",
            "type" : "integer",
            "example" : 1234578
          },
          "recorded_timestamp" : {
            "description" : "The date that the frame of video containing the annotation was recorded (1 of 3 possible video indices)",
            "type" : "string",
            "example" : "2018-01-29T13:40:01.000Z"
          }
        }
      },
      "ImagedMoment" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "description" : "The primary key",
            "type" : "string",
            "format" : "uuid",
            "example" : "8df9a79e-4b0a-4e00-8bc6-8866de42e752"
          },
          "video_reference_uuid" : {
            "description" : "The uuid of the video that this annotation belongs to",
            "type" : "string",
            "format" : "uuid",
            "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "timecode" : {
            "description" : "Video timecode of the annotation (1 of 3 possible video indices)",
            "type" : "string",
            "example" : "00:02:34:21"
          },
          "elapsed_time_millis" : {
            "description" : "Elapsed time from the start of the video for this annotation (1 of 3 possible video indices)",
            "type" : "integer",
            "example" : 1234578
          },
          "recorded_timestamp" : {
            "description" : "The date that the frame of video containing the annotation was recorded (1 of 3 possible video indices)",
            "type" : "string",
            "example" : "2018-01-29T13:40:01.000Z"
          },
          "last_upated_time" : {
            "description" : "The time of last modification",
            "type" : "string",
            "example" : "2017-10-25T15:46:38Z"
          },
          "observations" : {
            "description" : "The observations (i.e annotations) associated with this moment",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Observation"
            }
          },
          "imageReferences" : {
            "description" : "The images associated with this moment",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ImageReference"
            }
          },
          "ancillary_datum" : {
            "description" : "Metadata about position and environment",
            "$ref" : "#/components/schemas/CachedAncillaryDatum"
          }
        }
      },
      "ImagedMomentCount" : {
        "type" : "object",
        "properties" : {
          "start_timestamp" : {
            "description" : "The start date",
            "type" : "string",
            "format" : "ios8601",
            "example" : "2017-10-25T15:46:38Z"
          },
          "end_timestamp" : {
            "description" : "The end date",
            "type" : "string",
            "format" : "ios8601",
            "example" : "2017-10-25T15:46:38Z"
          },
          "count" : {
            "description" : "The number of modified imagedmoments/observations between the dates",
            "type" : "integer",
            "example" : 99
          }
        }
      },
      "Observation" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "description" : "The primary key",
            "type" : "string",
            "format" : "uuid",
            "example" : "8df9a79e-4b0a-4e00-8bc6-8866de42e752"
          },
          "concept" : {
            "description" : "the name of the annotation",
            "type" : "string",
            "example" : "Nanomia bijuga"
          },
          "observation_timestamp" : {
            "description" : "The date/time the annotation was made",
            "type" : "string",
            "example" : "2018-01-29T13:40:01.000Z"
          },
          "observer" : {
            "description" : "The person who made the observation",
            "type" : "string",
            "example" : "Brian Schlining"
          },
          "group" : {
            "description" : "A logical group that the observation belongs to",
            "type" : "string",
            "example" : "ROV"
          },
          "activity" : {
            "description" : "Some logical grouping based on an action or activity that was occuring while the video was recorded",
            "type" : "string",
            "example" : "transect"
          },
          "last_upated_time" : {
            "description" : "The time of last modification",
            "type" : "string",
            "example" : "2017-10-25T15:46:38Z"
          },
          "associations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Association"
            }
          }
        }
      },
      "ObservationCount" : {
        "type" : "object",
        "properties" : {
          "video_reference_uuid" : {
            "description" : "the primary key",
            "type" : "string",
            "format" : "uuid",
            "example" : "8df9a79e-4b0a-4e00-8bc6-8866de42e752"
          },
          "count" : {
            "description" : "The number of annotations in a video",
            "type" : "integer",
            "example" : 99
          }
        }
      }
    }
  }
}